/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SyncDeelEmployeesRouteImport } from './routes/syncDeelEmployees'
import { Route as SendKeeperTestsRouteImport } from './routes/sendKeeperTests'
import { Route as RunScheduledJobsRouteImport } from './routes/runScheduledJobs'
import { Route as ReceiveKeeperTestResultsRouteImport } from './routes/receiveKeeperTestResults'
import { Route as OrgChartRouteImport } from './routes/org-chart'
import { Route as ManagementRouteImport } from './routes/management'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ErrorRouteImport } from './routes/error'
import { Route as ActionsRouteImport } from './routes/actions'
import { Route as IndexRouteImport } from './routes/index'
import { Route as EmployeeEmployeeIdRouteImport } from './routes/employee.$employeeId'
import { Route as ApiAuthSplatRouteImport } from './routes/api/auth/$'

const SyncDeelEmployeesRoute = SyncDeelEmployeesRouteImport.update({
  id: '/syncDeelEmployees',
  path: '/syncDeelEmployees',
  getParentRoute: () => rootRouteImport,
} as any)
const SendKeeperTestsRoute = SendKeeperTestsRouteImport.update({
  id: '/sendKeeperTests',
  path: '/sendKeeperTests',
  getParentRoute: () => rootRouteImport,
} as any)
const RunScheduledJobsRoute = RunScheduledJobsRouteImport.update({
  id: '/runScheduledJobs',
  path: '/runScheduledJobs',
  getParentRoute: () => rootRouteImport,
} as any)
const ReceiveKeeperTestResultsRoute =
  ReceiveKeeperTestResultsRouteImport.update({
    id: '/receiveKeeperTestResults',
    path: '/receiveKeeperTestResults',
    getParentRoute: () => rootRouteImport,
  } as any)
const OrgChartRoute = OrgChartRouteImport.update({
  id: '/org-chart',
  path: '/org-chart',
  getParentRoute: () => rootRouteImport,
} as any)
const ManagementRoute = ManagementRouteImport.update({
  id: '/management',
  path: '/management',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ErrorRoute = ErrorRouteImport.update({
  id: '/error',
  path: '/error',
  getParentRoute: () => rootRouteImport,
} as any)
const ActionsRoute = ActionsRouteImport.update({
  id: '/actions',
  path: '/actions',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EmployeeEmployeeIdRoute = EmployeeEmployeeIdRouteImport.update({
  id: '/employee/$employeeId',
  path: '/employee/$employeeId',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/actions': typeof ActionsRoute
  '/error': typeof ErrorRoute
  '/login': typeof LoginRoute
  '/management': typeof ManagementRoute
  '/org-chart': typeof OrgChartRoute
  '/receiveKeeperTestResults': typeof ReceiveKeeperTestResultsRoute
  '/runScheduledJobs': typeof RunScheduledJobsRoute
  '/sendKeeperTests': typeof SendKeeperTestsRoute
  '/syncDeelEmployees': typeof SyncDeelEmployeesRoute
  '/employee/$employeeId': typeof EmployeeEmployeeIdRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/actions': typeof ActionsRoute
  '/error': typeof ErrorRoute
  '/login': typeof LoginRoute
  '/management': typeof ManagementRoute
  '/org-chart': typeof OrgChartRoute
  '/receiveKeeperTestResults': typeof ReceiveKeeperTestResultsRoute
  '/runScheduledJobs': typeof RunScheduledJobsRoute
  '/sendKeeperTests': typeof SendKeeperTestsRoute
  '/syncDeelEmployees': typeof SyncDeelEmployeesRoute
  '/employee/$employeeId': typeof EmployeeEmployeeIdRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/actions': typeof ActionsRoute
  '/error': typeof ErrorRoute
  '/login': typeof LoginRoute
  '/management': typeof ManagementRoute
  '/org-chart': typeof OrgChartRoute
  '/receiveKeeperTestResults': typeof ReceiveKeeperTestResultsRoute
  '/runScheduledJobs': typeof RunScheduledJobsRoute
  '/sendKeeperTests': typeof SendKeeperTestsRoute
  '/syncDeelEmployees': typeof SyncDeelEmployeesRoute
  '/employee/$employeeId': typeof EmployeeEmployeeIdRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/actions'
    | '/error'
    | '/login'
    | '/management'
    | '/org-chart'
    | '/receiveKeeperTestResults'
    | '/runScheduledJobs'
    | '/sendKeeperTests'
    | '/syncDeelEmployees'
    | '/employee/$employeeId'
    | '/api/auth/$'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/actions'
    | '/error'
    | '/login'
    | '/management'
    | '/org-chart'
    | '/receiveKeeperTestResults'
    | '/runScheduledJobs'
    | '/sendKeeperTests'
    | '/syncDeelEmployees'
    | '/employee/$employeeId'
    | '/api/auth/$'
  id:
    | '__root__'
    | '/'
    | '/actions'
    | '/error'
    | '/login'
    | '/management'
    | '/org-chart'
    | '/receiveKeeperTestResults'
    | '/runScheduledJobs'
    | '/sendKeeperTests'
    | '/syncDeelEmployees'
    | '/employee/$employeeId'
    | '/api/auth/$'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ActionsRoute: typeof ActionsRoute
  ErrorRoute: typeof ErrorRoute
  LoginRoute: typeof LoginRoute
  ManagementRoute: typeof ManagementRoute
  OrgChartRoute: typeof OrgChartRoute
  ReceiveKeeperTestResultsRoute: typeof ReceiveKeeperTestResultsRoute
  RunScheduledJobsRoute: typeof RunScheduledJobsRoute
  SendKeeperTestsRoute: typeof SendKeeperTestsRoute
  SyncDeelEmployeesRoute: typeof SyncDeelEmployeesRoute
  EmployeeEmployeeIdRoute: typeof EmployeeEmployeeIdRoute
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/syncDeelEmployees': {
      id: '/syncDeelEmployees'
      path: '/syncDeelEmployees'
      fullPath: '/syncDeelEmployees'
      preLoaderRoute: typeof SyncDeelEmployeesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sendKeeperTests': {
      id: '/sendKeeperTests'
      path: '/sendKeeperTests'
      fullPath: '/sendKeeperTests'
      preLoaderRoute: typeof SendKeeperTestsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/runScheduledJobs': {
      id: '/runScheduledJobs'
      path: '/runScheduledJobs'
      fullPath: '/runScheduledJobs'
      preLoaderRoute: typeof RunScheduledJobsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/receiveKeeperTestResults': {
      id: '/receiveKeeperTestResults'
      path: '/receiveKeeperTestResults'
      fullPath: '/receiveKeeperTestResults'
      preLoaderRoute: typeof ReceiveKeeperTestResultsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/org-chart': {
      id: '/org-chart'
      path: '/org-chart'
      fullPath: '/org-chart'
      preLoaderRoute: typeof OrgChartRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/management': {
      id: '/management'
      path: '/management'
      fullPath: '/management'
      preLoaderRoute: typeof ManagementRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/error': {
      id: '/error'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/actions': {
      id: '/actions'
      path: '/actions'
      fullPath: '/actions'
      preLoaderRoute: typeof ActionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/employee/$employeeId': {
      id: '/employee/$employeeId'
      path: '/employee/$employeeId'
      fullPath: '/employee/$employeeId'
      preLoaderRoute: typeof EmployeeEmployeeIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ActionsRoute: ActionsRoute,
  ErrorRoute: ErrorRoute,
  LoginRoute: LoginRoute,
  ManagementRoute: ManagementRoute,
  OrgChartRoute: OrgChartRoute,
  ReceiveKeeperTestResultsRoute: ReceiveKeeperTestResultsRoute,
  RunScheduledJobsRoute: RunScheduledJobsRoute,
  SendKeeperTestsRoute: SendKeeperTestsRoute,
  SyncDeelEmployeesRoute: SyncDeelEmployeesRoute,
  EmployeeEmployeeIdRoute: EmployeeEmployeeIdRoute,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { startInstance } from './start.ts'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
    config: Awaited<ReturnType<typeof startInstance.getOptions>>
  }
}
